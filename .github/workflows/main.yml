name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "master" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'src/main/resources/static/js/package-lock.json'

      # üî¥ Run backend tests
      - name: Run Backend Tests
        run: mvn test

      # üü¢ Build backend JAR (skip tests to avoid re-running)
      - name: Build Backend
        run: mvn package -DskipTests

      # üî¥ Install frontend deps and build
      - name: Install Frontend Dependencies
        run: npm install
        working-directory: ./src/main/resources/static/js

      - name: Build Frontend (if required)
        run: npm run build || echo "No build script ‚Äî skipping"
        working-directory: ./src/main/resources/static/js

      # üî§ Normalize repo name to lowercase for GHCR
      - name: Set lower case owner and repo name
        id: string
        run: |
          echo "OWNER_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "REPO_LC=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      # üîë Login to GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # üê≥ Push backend image
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.backend
          push: true
          tags: ghcr.io/${{ steps.string.outputs.OWNER_LC }}/${{ steps.string.outputs.REPO_LC }}/backend:${{ github.sha }}

      # üñ•Ô∏è Push frontend image
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.frontend
          push: true
          tags: ghcr.io/${{ steps.string.outputs.OWNER_LC }}/${{ steps.string.outputs.REPO_LC }}/frontend:${{ github.sha }}

    deploy-to-k8s:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.29.0'

      - name: Create kind cluster
        uses: helm/kind-action@v1.10.0
        with:
          version: v0.23.0
          config: |
            kind: Cluster
            apiVersion: kind.x-k8s.io/v1alpha4
            nodes:
            - role: control-plane

      - name: Set lower case owner and repo name
        id: string
        run: |
          echo "OWNER_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "REPO_LC=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Load Docker images into kind
        run: |
          docker pull ghcr.io/${{ steps.string.outputs.OWNER_LC }}/${{ steps.string.outputs.REPO_LC }}/backend:${{ github.sha }}
          docker pull ghcr.io/${{ steps.string.outputs.OWNER_LC }}/${{ steps.string.outputs.REPO_LC }}/frontend:${{ github.sha }}
          kind load docker-image ghcr.io/${{ steps.string.outputs.OWNER_LC }}/${{ steps.string.outputs.REPO_LC }}/backend:${{ github.sha }}
          kind load docker-image ghcr.io/${{ steps.string.outputs.OWNER_LC }}/${{ steps.string.outputs.REPO_LC }}/frontend:${{ github.sha }}

      - name: Deploy to Kubernetes
        run: |
          # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–¥–∏–º —Ä–µ—Å—É—Ä—Å—ã
          kubectl apply -f k8s/
          # –ó–∞—Ç–µ–º –æ–±–Ω–æ–≤–∏–º –æ–±—Ä–∞–∑—ã (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ deployment —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
          kubectl set image deployment/backend backend=ghcr.io/${{ steps.string.outputs.OWNER_LC }}/${{ steps.string.outputs.REPO_LC }}/backend:${{ github.sha }} -n default
          kubectl set image deployment/frontend frontend=ghcr.io/${{ steps.string.outputs.OWNER_LC }}/${{ steps.string.outputs.REPO_LC }}/frontend:${{ github.sha }} -n default
          