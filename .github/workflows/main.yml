name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "master" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'src/main/resources/static/js/package-lock.json'

      # 🔴 Run backend tests
      - name: Run Backend Tests
        run: mvn test

      # 🟢 Build backend JAR (skip tests to avoid re-running)
      - name: Build Backend
        run: mvn package -DskipTests

      # 🔴 Install frontend deps and build
      - name: Install Frontend Dependencies
        run: npm install
        working-directory: ./src/main/resources/static/js

      - name: Build Frontend (if required)
        run: npm run build || echo "No build script — skipping"
        working-directory: ./src/main/resources/static/js

      # 🔤 Normalize repo name to lowercase for GHCR
      - name: Set lower case owner and repo name
        id: string
        run: |
          echo "OWNER_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "REPO_LC=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      # 🔑 Login to GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 🐳 Push backend image
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.backend
          push: true
          tags: ghcr.io/${{ steps.string.outputs.OWNER_LC }}/${{ steps.string.outputs.REPO_LC }}/backend:${{ github.sha }}

      # 🖥️ Push frontend image
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.frontend
          push: true
          tags: ghcr.io/${{ steps.string.outputs.OWNER_LC }}/${{ steps.string.outputs.REPO_LC }}/frontend:${{ github.sha }}

  deploy-to-k8s:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.29.0'

      - name: Configure kubectl
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          echo "$KUBE_CONFIG_DATA" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml
          kubectl config view

      - name: Set lower case owner and repo name
        id: string
        run: |
          echo "OWNER_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "REPO_LC=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      
      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: kubeconfig.yaml
        run: |
          kubectl set image deployment/backend backend=ghcr.io/${{ steps.string.outputs.OWNER_LC }}/${{ steps.string.outputs.REPO_LC }}/backend:${{ github.sha }} -n default
          kubectl set image deployment/frontend frontend=ghcr.io/${{ steps.string.outputs.OWNER_LC }}/${{ steps.string.outputs.REPO_LC }}/frontend:${{ github.sha }} -n default
          kubectl apply -k k8s/